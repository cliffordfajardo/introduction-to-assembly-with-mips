.data
	myFirstInteger:  .word 2
	mySecondInteger: .word 1
	
.text 
	# Move data (essentially from RAM to registers)
	lw $s0, myFirstInteger    # s0 = 2
	lw $s1, mySecondInteger	  # s1 = 1
	
	sub $t0, $s0, $s1	  # t0 = s0+s1  (s0-s7 content used for later use)
	
				 # v0 register primarily used for storing syscode values
	li   $v0, 1		 # syscall code for printing integer
	move $a0, $t0		 # move value from t0 into a0.
				 # move is known as a pseudo instruction. Pseudo instructions do not have a direct language equivalent. When the assembler translates our assembly code, it will translate these pseudo instructions into 1 or more language instructions.
				 # you can think of this instruction as "add $a0, $zero, $t0
	syscall 